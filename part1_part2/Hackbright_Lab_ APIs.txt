Part 1: SWAPI

Instructions: For each of the following use the SWAPI docs, to figure out the complete URL(s) (including params or queries) that you need to go to in order to reach the following data:

1. The height of Darth Vader
https://swapi.dev/api/people/4

2. The population of the planet Alderaan
https://swapi.dev/api/planets/2

3. The name of the manufacturer of the Millennium Falcon
https://swapi.dev/api/starships/10

4. The name of the species that C-3PO belongs to (multiple URLs)
https://swapi.dev/api/people/2
https://swapi.dev/api/species/2

5. The title of each film that Obi-Wan Kenobi is in (multiple URLs)
https://swapi.dev/api/people/10
https://swapi.dev/api/films/1
https://swapi.dev/api/films/2
https://swapi.dev/api/films/3
https://swapi.dev/api/films/4
https://swapi.dev/api/films/5
https://swapi.dev/api/films/6

6. Use the search query (the how to on the search query is at the bottom of the Getting Started section of the documentation) to get the information about the Millennium Falcon, it’s a starship
https://swapi.dev/api/starships/?search=millennium




Part 2: Social Mountain

Summary: In this section, you’ll be looking through the documentation for the Social Mountain API and answering questions. You’ll also be making requests and recording the URLs and some information about the responses. Run the requests in Postman. Note: this API is live and viewable by your classmates and staff. Keep things appropriate for class.

You can view the documentation for the Social Mountain API here. The base URL of your requests is: https://practiceapi.devmountain.com/api (make sure to have the “s” in “https”)

1. Check if the POST request accepts params, queries, and/or a body. Which one(s) and what information is it expecting to be sent?
The POST request accepts only a body in the form of a string.

2. What data type does the GET request return?
The GET request returns an array that will contain numbers and strings

3. What would the URL look like for deleting the post with the id 555? (This post does not exist anymore, but the syntax is the same for existing posts)
https://practiceapi.devmountain.com/api/posts/555

4. List the possible response codes from the GET request at /posts/filter
409 Conflict

5. Create a post whose text is your name, record the URL and body here:
https://practiceapi.devmountain.com/api/posts
{
        “id”: 1023,
        “text”: “Nicole Carman”,
        “date”: “17 Aug 2022”
}

6. What would the URL and body object be to update the post you just made to contain your favorite color instead of your name?
https://practiceapi.devmountain.com/api/posts/?id=1023
{
    "text": "Nicole's favorite color is purple!"
}

7. What is the URL to get posts that contain the text “blue”?
https://practiceapi.devmountain.com/api/posts/?text=blue

8. Make a request to GET all the posts. What are the content type and charset of the response? (Hint: look on the Headers)
application/json; charset=utf-8

9. What would cause a PUT request to return a 409 status?
Request is missing either required id in the query or text in the body. It can indicate that the request could not be processed because of conflict in the request, such as an edit conflict.

10. What happens if you try to send a query in the GET request URL? Why do you get that response?
All objects are returned when I try to send a query in the GET request URL (as if I didn’t enter a query at all). I’m assuming this is happening because everything after /api/posts is ignored, as GET doesn’t accept any params, queries, or a body.